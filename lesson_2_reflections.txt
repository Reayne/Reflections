What happens when you initialize a repository? Why do you need to do it?

You initialize a repository when you want to start tracking changes in it.
Git creates a hidden folder (.git) inside a repository.
This folder will contain all commits.

How is the staging area different from the working directory and the repository? What value do you think it offers?

Staging area explicitly shows what changes you want to be included in a commit.
Repository contains ALL files.
Working directory contains files within git.

How can you use the staging area to make sure you have one commit per logical change?

By using git diff --staged, can compare staging area with the most current commit.
The differences will be visible.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Branches are helpful when you want to branch out from your master plan.
By naming them it is easier to remember, what you wanted to do inside.

How do the diagrams help you visualize the branch structure?

You can see that each commit has a parent (except the very first init commit).
Branches are just names for humans, git remembers ids.
You have to remember, that some commits (not related to branches) can be UNREACHABLE!
Diagrams help visualize which commits belong to which branch.
